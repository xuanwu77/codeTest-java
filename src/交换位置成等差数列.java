/*如果一个数列S满足对于所有的合法的i,都有S[i + 1] = S[i] + d, 这里的d也可以是负数和零,我们就称数列S为等差数列。
小易现在有一个长度为n的数列x,小易想把x变为一个等差数列。小易允许在数列上做交换任意两个位置的数值的操作,并且交换操作允许交换多次。
但是有些数列通过交换还是不能变成等差数列,小易需要判别一个数列是否能通过交换操作变成等差数列*/


/*输入：包括两行,第一行包含整数n(2 ≤ n ≤ 50),即数列的长度。
第二行n个元素x[i](0 ≤ x[i] ≤ 1000),即数列中的每个整数。
如果可以变成等差数列输出"Possible",否则输出"Impossible"。*/

import java.util.*;
public class 交换位置成等差数列 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		while(sc.hasNext()){
            int n = sc.nextInt();
            int[] arr = new int[n];
            int sum =0 ;
            for(int i = 0;i < n; i++){
                arr[i] = sc.nextInt();
                sum += arr[i];
            }
            //不是Array.sort(arr)，我老搞错
            Arrays.sort(arr);
            int d = arr[1] - arr[0];
            //利用等差数列求和公式计算
            int idealSum = n * arr[0] + (n*(n-1))/2 * d;
            if(sum == idealSum){
                System.out.println("Possible");
            }else{
                System.out.println("Impossible");
            }
        }
    }
}
